/**
 * Shimmer/Loading System CSS
 * Unified loading states for services and playlists
 */

/* Core shimmer animation */
@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes morphOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Core shimmer class - apply to any element */
.shimmer {
  border-radius: var(--border-radius-small);
  overflow: hidden;
  position: relative;
  background-color: var(--skeleton-color);
  transition: opacity 0.5s ease-in-out;
}

.shimmer.morphing-out {
  animation: morphOut 0.5s ease-in-out forwards;
}

.inline-shimmer {
  display: inline-block;
  position: relative;
  border-radius: var(--border-radius-small);
}

.inline-shimmer.shimmer-inline-logo {
  width: 24px;
  height: 24px;
  border-radius: 4px;
  margin-right: var(--space-xs);
}

.inline-shimmer.shimmer-inline-title {
  height: 24px;
  min-width: 120px;
  margin-right: var(--space-sm);
}

.inline-shimmer.shimmer-inline-description {
  height: 20px;
  min-width: 180px;
  margin-left: var(--space-sm);
}

.shimmer::before {
  animation: shimmer var(--shimmer-duration) infinite;
  background: linear-gradient(
    90deg,
    var(--skeleton-color) 0%,
    rgba(255, 255, 255, var(--shimmer-opacity)) 50%,
    var(--skeleton-color) 100%
  );
  content: "";
  height: 100%;
  left: -100%;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 1;
}

/* Loading overlay utilities */
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10;
  display: block;
  opacity: 0;
  pointer-events: none;
  transition: opacity var(--fade-duration-medium) ease-in-out;
}

.loading-overlay.active {
  opacity: 1;
  pointer-events: auto;
}

.loading-overlay.fade-out {
  opacity: 0;
  pointer-events: none;
  z-index: 0;
}

.loading-overlay.flex {
  display: flex;
}

.loading-overlay.flex.active {
  display: flex;
}

/* Service-specific shimmer components */
.loading-overlay-service {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0;
}

.shimmer-service-image {
  width: 100%;
  padding-bottom: 100%;
  margin-bottom: 0;
}

.shimmer-service-text {
  width: 100%;
  margin-top: var(--space-md);
  text-align: left;
  align-self: flex-start;
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
}

/* Playlist-specific shimmer components */
.loading-overlay-playlist {
  flex-direction: column;
}

.loading-overlay-playlist.active {
  display: flex;
}

/* Override playlist overflow when shimmer is active */
.playlist.main-playlist:has(.loading-overlay-playlist.active) {
  overflow-y: hidden;
  height: auto;
  min-height: 90vh;
  max-height: 95vh;
}

/* Table-only shimmer styling */
.loading-overlay-table {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  min-height: 100vh;
  background-color: var(--container-background);
  z-index: 5;
  display: none;
  flex-direction: column;
  justify-content: flex-start;
  padding: 0;
}

.loading-overlay-table.active {
  display: flex;
}

/* Ensure table container can accommodate full shimmer */
.playlist-table:has(.loading-overlay-table.active) {
  min-height: 80vh;
  overflow: visible;
}

/* Playlist header shimmer - uses actual content classes */
.loading-overlay-playlist .playlist-header {
  display: flex;
  flex-direction: column;
}

.loading-overlay-playlist .playlist-title {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
}

.loading-overlay-playlist .source-icon.shimmer {
  width: var(--size-icon-sm);
  height: var(--size-icon-sm);
  border-radius: var(--border-radius-small);
}

/* Controls shimmer - uses actual content classes */
.loading-overlay-playlist .control-group {
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
}

.loading-overlay-playlist .control-label.shimmer {
  width: var(--shimmer-control-label-width);
  height: var(--space-lg);
}

.loading-overlay-playlist .genre-controls,
.loading-overlay-playlist .sort-controls {
  display: flex;
  gap: var(--space-lg);
}

.loading-overlay-playlist .sort-button.shimmer {
  position: relative;
  pointer-events: none;
  overflow: hidden;
  color: transparent;
  border-color: transparent;
}

.loading-overlay-playlist .sort-button.shimmer::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background: linear-gradient(
    90deg,
    var(--skeleton-color) 0%,
    rgba(255, 255, 255, var(--shimmer-opacity)) 50%,
    var(--skeleton-color) 100%
  );
  animation: shimmer var(--shimmer-duration) infinite;
  opacity: 0.9;
}

.shimmer-control-bar {
  display: block;
  width: 6ch;
  height: var(--font-size-md);
  border-radius: var(--border-radius-small);
  background: transparent;
}

.shimmer-control-genre .shimmer-control-bar {
  width: 7ch;
}

.shimmer-control-rank .shimmer-control-bar {
  width: 8ch;
}

/* Table shimmer */
.shimmer-table-container {
  flex: 1;
  overflow: hidden;
}

.playlist-table-shimmer {
  margin: 0;
}

.playlist-shimmer-row {
  height: var(--size-row-md);
}

.playlist-shimmer-row:not(:last-child) {
  margin-bottom: var(--space-xs);
}

.playlist-shimmer-row td {
  padding: var(--space-xs);
  vertical-align: middle;
  border-bottom: 1px solid var(--container-background);
}

.playlist-shimmer-row td.rank {
  text-align: center;
  width: 1%;
  padding: 0;
}

.playlist-shimmer-row td.cover {
  text-align: center;
  width: 0%;
}

.playlist-shimmer-row td.info {
  width: 1%;
  white-space: nowrap;
}

.playlist-shimmer-row td.spacer {
  width: 100%;
}

.playlist-shimmer-row td.total-play-count,
.playlist-shimmer-row td.trending {
  width: 10%;
  text-align: left;
}

.playlist-shimmer-row td.seen-on {
  width: 1%;
  text-align: right;
  white-space: nowrap;
}

.playlist-shimmer-row td.external {
  width: 1%;
  text-align: center;
  white-space: nowrap;
}

/* Responsive adjustments */
@media screen and (max-width: 768px) {
  .loading-overlay-service {
    padding: 0;
  }

  .playlist-shimmer-row {
    height: var(--size-row-sm);
  }

  .shimmer-playlist-desc {
    width: var(--shimmer-playlist-desc-width-mobile);
  }
}
