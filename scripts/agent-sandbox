#!/bin/bash

# Agent Sandbox Management System
# Manages 6 numbered agent sandboxes (1-6) with open/close states

WORKTREE_BASE="/Users/eli/github/tunemeld-worktrees"
STATE_FILE="$HOME/.tunemeld-agent-sandboxes"

# Initialize state file if it doesn't exist
if [ ! -f "$STATE_FILE" ]; then
    echo "1:closed" > "$STATE_FILE"
    echo "2:closed" >> "$STATE_FILE"
    echo "3:closed" >> "$STATE_FILE"
    echo "4:closed" >> "$STATE_FILE"
    echo "5:closed" >> "$STATE_FILE"
    echo "6:closed" >> "$STATE_FILE"
fi

show_status() {
    echo "📦 Agent Sandbox Status:"
    echo "========================"
    while IFS=':' read -r num status; do
        if [ "$status" = "open" ]; then
            echo "🟢 Sandbox $num: OPEN"
        else
            echo "⚫ Sandbox $num: CLOSED"
        fi
    done < "$STATE_FILE"
}

get_sandbox_status() {
    num=$1
    grep "^$num:" "$STATE_FILE" | cut -d':' -f2
}

update_sandbox_status() {
    num=$1
    status=$2

    # Create temp file with updated status
    temp_file=$(mktemp)
    while IFS=':' read -r sandbox_num sandbox_status; do
        if [ "$sandbox_num" = "$num" ]; then
            echo "$num:$status"
        else
            echo "$sandbox_num:$sandbox_status"
        fi
    done < "$STATE_FILE" > "$temp_file"

    # Replace original file
    mv "$temp_file" "$STATE_FILE"
}

open_sandbox() {
    num=$1
    task=$2

    if [ -z "$task" ]; then
        echo "❌ Error: Task description required"
        echo "Usage: agent-sandbox open <1-6> <task-description>"
        exit 1
    fi

    status=$(get_sandbox_status "$num")
    if [ "$status" = "open" ]; then
        echo "❌ Sandbox $num is already open"
        exit 1
    fi

    echo "🔄 Opening sandbox $num for task: $task"

    # Create agentree with numbered branch
    branch_name="sandbox-$num-$task"
    cd /Users/eli/github/tunemeld
    git checkout master
    git pull origin master
    agentree -b "$branch_name"

    if [ $? -eq 0 ]; then
        update_sandbox_status "$num" "open"
        echo "✅ Sandbox $num opened successfully"
        echo "📁 Path: $WORKTREE_BASE/agent-$branch_name"
        echo "🌿 Branch: agent/$branch_name"
        echo ""
        echo "💡 Next steps:"
        echo "   cd \"$WORKTREE_BASE/agent-$branch_name\""
        echo "   claude --resume"
    else
        echo "❌ Failed to create sandbox $num"
        exit 1
    fi
}

close_sandbox() {
    num=$1

    status=$(get_sandbox_status "$num")
    if [ "$status" = "closed" ]; then
        echo "❌ Sandbox $num is already closed"
        exit 1
    fi

    echo "🔄 Closing sandbox $num..."

    # Find the worktree directory for this sandbox
    worktree_dir=$(find "$WORKTREE_BASE" -name "agent-sandbox-$num-*" -type d | head -1)

    if [ -n "$worktree_dir" ]; then
        echo "🗑️  Removing worktree: $worktree_dir"
        rm -rf "$worktree_dir"

        # Remove git worktree reference
        cd /Users/eli/github/tunemeld
        git worktree prune

        update_sandbox_status "$num" "closed"
        echo "✅ Sandbox $num closed successfully"
    else
        echo "⚠️  Worktree not found, marking as closed anyway"
        update_sandbox_status "$num" "closed"
    fi
}

find_open_sandbox() {
    while IFS=':' read -r num status; do
        if [ "$status" = "open" ]; then
            echo "$num"
            return
        fi
    done < "$STATE_FILE"
}

case "$1" in
    "status")
        show_status
        ;;
    "open")
        if [ -z "$2" ] || [ -z "$3" ]; then
            echo "Usage: agent-sandbox open <1-6> <task-description>"
            exit 1
        fi

        if ! [[ "$2" =~ ^[1-6]$ ]]; then
            echo "❌ Error: Sandbox number must be 1-6"
            exit 1
        fi

        open_sandbox "$2" "$3"
        ;;
    "close")
        if [ -z "$2" ]; then
            echo "Usage: agent-sandbox close <1-6>"
            exit 1
        fi

        if ! [[ "$2" =~ ^[1-6]$ ]]; then
            echo "❌ Error: Sandbox number must be 1-6"
            exit 1
        fi

        close_sandbox "$2"
        ;;
    "auto-open")
        # Find first available sandbox and open it
        available=$(grep ":closed" "$STATE_FILE" | head -1 | cut -d':' -f1)
        if [ -n "$available" ]; then
            if [ -z "$2" ]; then
                echo "Usage: agent-sandbox auto-open <task-description>"
                exit 1
            fi
            open_sandbox "$available" "$2"
        else
            echo "❌ All sandboxes are currently open"
            show_status
            exit 1
        fi
        ;;
    *)
        echo "🤖 Agent Sandbox Management"
        echo "=========================="
        echo ""
        echo "Commands:"
        echo "  status                    - Show all sandbox states"
        echo "  open <1-6> <task>        - Open numbered sandbox for task"
        echo "  close <1-6>              - Close numbered sandbox"
        echo "  auto-open <task>         - Open first available sandbox"
        echo ""
        echo "Examples:"
        echo "  agent-sandbox open 1 fix-auth-bug"
        echo "  agent-sandbox close 1"
        echo "  agent-sandbox auto-open add-dark-mode"
        echo ""
        show_status
        ;;
esac
