[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["playlist_etl*", "django_backend*"]
exclude = ["venv*", "node_modules*", "staticfiles*", "backend*", "kv_worker*", "output_static*", "tests*"]

[project]
name = "tunemeld"
version = "0.1.0"
description = "Cross-platform music analytics and playlist aggregation"
authors = [{name = "TuneMeld Team"}]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    # Core Django framework and web dependencies
    "Django>=4.2,<5.0",
    "django-cors-headers>=4.4.0",
    "django-distill>=3.2.7",
    "dj-database-url>=2.1.0",
    "psycopg2-binary>=2.9.10",
    "gunicorn>=20.1.0",
    "uvicorn>=0.23.2",
    "graphene-django>=3.2.0",

    # ETL Pipeline Dependencies
    "beautifulsoup4>=4.12.3",
    "selenium>=4.22.0",
    "spotipy>=2.24.0",
    "spotdl>=4.2.8",
    "webdriver-manager>=4.0.2",
    "tenacity>=9.0.0",
    "pydantic>=2.9.0",
    "unidecode>=1.3.8",

    # External Services
    "requests>=2.32.3",

    # Utilities
    "python-dotenv>=1.0.0",
    "croniter>=2.0.7",
    "PyYAML>=6.0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.8.0",
    "pre-commit>=3.0.0",
    "mypy>=1.0.0",
]

[tool.ruff]
line-length = 120
indent-width = 4

target-version = "py313"

exclude = [
    "*.ipynb",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
    "node_modules",
    "venv",
    "**/migrations/**"
]

[tool.ruff.lint]
# Enforce strict linting rules
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "C4",     # flake8-comprehensions
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "TID252", # ban relative imports
    "SIM",    # flake8-simplify
    "Q",      # flake8-quotes
    "TCH",    # flake8-type-checking
    "RUF",    # Ruff-specific rules
]

ignore = [
    "COM812", # trailing-comma-missing (conflicts with formatter)
    "ISC001", # single-line-implicit-string-concatenation (conflicts with formatter)
    "N802",   # function name should be lowercase (allows HTTP handler methods)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["playlist_etl", "django_backend"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow running (deselect with '-m \"not slow\"')",
    "external_api: marks tests that require external API access (deselect with '-m \"not external_api\"')"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true
pretty = true
namespace_packages = true
explicit_package_bases = true

exclude = [
    "venv/",
    "node_modules/",
    ".*/migrations/.*"
]

[[tool.mypy.overrides]]
module = [
    "selenium.*",
    "bs4.*",
    "unidecode.*",
    "requests.*",
    "spotipy.*",
    "fp.fp.*"
]
ignore_missing_imports = true
