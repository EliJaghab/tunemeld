# Generated by Django 4.2.24 on 2025-09-26 21:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0026_add_icon_class_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="AggregatePlayCount",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "isrc",
                    models.CharField(
                        db_index=True,
                        help_text="International Standard Recording Code (12 characters)",
                        max_length=12,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z]{2}[A-Z0-9]{3}[0-9]{7}$", "Invalid ISRC format"
                            )
                        ],
                    ),
                ),
                (
                    "current_play_count",
                    models.BigIntegerField(
                        help_text="Current play count for this service (or total for 'all' service)"
                    ),
                ),
                (
                    "weekly_change",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Absolute change from one week ago",
                        null=True,
                    ),
                ),
                (
                    "weekly_change_percentage",
                    models.FloatField(
                        blank=True,
                        help_text="Percentage change from one week ago",
                        null=True,
                    ),
                ),
                (
                    "recorded_date",
                    models.DateField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        help_text="Date this aggregate was calculated",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "aggregate_play_counts",
            },
        ),
        migrations.CreateModel(
            name="HistoricalTrackPlayCount",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "isrc",
                    models.CharField(
                        db_index=True,
                        help_text="International Standard Recording Code (12 characters)",
                        max_length=12,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z]{2}[A-Z0-9]{3}[0-9]{7}$", "Invalid ISRC format"
                            )
                        ],
                    ),
                ),
                (
                    "current_play_count",
                    models.BigIntegerField(
                        help_text="Raw play count at this point in time"
                    ),
                ),
                (
                    "recorded_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="Date this count was recorded",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "historical_track_play_counts",
            },
        ),
        migrations.AlterUniqueTogether(
            name="aggregateviewcount",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="aggregateviewcount",
            name="service",
        ),
        migrations.AlterUniqueTogether(
            name="historicaltrackviewcount",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="historicaltrackviewcount",
            name="service",
        ),
        migrations.AlterUniqueTogether(
            name="genre",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="service",
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name="genre",
            name="name",
            field=models.CharField(
                help_text="Internal genre identifier (lowercase, underscores only)",
                max_length=50,
                validators=[
                    django.core.validators.RegexValidator(
                        "^[a-z_]+$", "Genre names must be lowercase with underscores"
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="rank",
            name="name",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="service",
            name="name",
            field=models.CharField(
                help_text="Internal service identifier",
                max_length=100,
                validators=[
                    django.core.validators.RegexValidator(
                        "^[A-Za-z][A-Za-z0-9_]*$", "Service names must be alphanumeric"
                    )
                ],
            ),
        ),
        migrations.AddIndex(
            model_name="genre",
            index=models.Index(fields=["name"], name="genres_name_4778a7_idx"),
        ),
        migrations.AddIndex(
            model_name="rank",
            index=models.Index(fields=["name"], name="ranks_name_08e251_idx"),
        ),
        migrations.AddIndex(
            model_name="rank",
            index=models.Index(fields=["etl_run_id"], name="ranks_etl_run_443516_idx"),
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(fields=["name"], name="services_name_a79f61_idx"),
        ),
        migrations.AddConstraint(
            model_name="genre",
            constraint=models.UniqueConstraint(
                fields=("name",), name="unique_genre_name"
            ),
        ),
        migrations.AddConstraint(
            model_name="service",
            constraint=models.UniqueConstraint(
                fields=("name",), name="unique_service_name"
            ),
        ),
        migrations.DeleteModel(
            name="AggregateViewCount",
        ),
        migrations.DeleteModel(
            name="HistoricalTrackViewCount",
        ),
        migrations.AddField(
            model_name="historicaltrackplaycount",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.service"
            ),
        ),
        migrations.AddField(
            model_name="aggregateplaycount",
            name="service",
            field=models.ForeignKey(
                help_text="Service for this play count record (individual service or 'all' for aggregated)",
                on_delete=django.db.models.deletion.CASCADE,
                to="core.service",
            ),
        ),
        migrations.RemoveField(
            model_name="genre",
            name="etl_run_id",
        ),
        migrations.RemoveField(
            model_name="service",
            name="etl_run_id",
        ),
        migrations.AddIndex(
            model_name="historicaltrackplaycount",
            index=models.Index(
                fields=["service", "recorded_date"],
                name="historical__service_1f53e4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="historicaltrackplaycount",
            index=models.Index(
                fields=["recorded_date"], name="historical__recorde_4937f6_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="historicaltrackplaycount",
            unique_together={("isrc", "service", "recorded_date")},
        ),
        migrations.AddIndex(
            model_name="aggregateplaycount",
            index=models.Index(
                fields=["service", "isrc", "recorded_date"],
                name="aggregate_p_service_e361b0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="aggregateplaycount",
            index=models.Index(
                fields=["recorded_date"], name="aggregate_p_recorde_24dc43_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aggregateplaycount",
            index=models.Index(
                fields=["isrc", "recorded_date"], name="aggregate_p_isrc_e04f86_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="aggregateplaycount",
            unique_together={("service", "isrc", "recorded_date")},
        ),
    ]
