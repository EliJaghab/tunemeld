# Generated by Django 4.2.24 on 2025-09-27 00:30

from django.db import migrations


def mark_migration_0027_as_applied(apps, schema_editor):
    """
    Mark migration 0027 as applied if the aggregate_play_counts table already exists.
    This handles the case where the table was created manually or by a previous partial migration.
    """
    from django.db import connection

    with connection.cursor() as cursor:
        # Check if the table exists
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables
                WHERE table_schema = 'public'
                AND table_name = 'aggregate_play_counts'
            );
        """)
        table_exists = cursor.fetchone()[0]

        if table_exists:
            # Mark migration 0027 as applied
            cursor.execute("""
                INSERT INTO django_migrations (app, name, applied)
                VALUES ('core', '0027_remove_etl_run_id_from_genre_service', NOW())
                ON CONFLICT (app, name) DO NOTHING;
            """)


def reverse_mark_migration(apps, schema_editor):
    """Reverse operation - remove the migration record"""
    from django.db import connection

    with connection.cursor() as cursor:
        cursor.execute("""
            DELETE FROM django_migrations
            WHERE app = 'core' AND name = '0027_remove_etl_run_id_from_genre_service';
        """)


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0030_remove_playlist_playlists_etl_run_a70eb6_idx_and_more"),
    ]

    operations = [
        migrations.RunPython(mark_migration_0027_as_applied, reverse_mark_migration),
    ]
