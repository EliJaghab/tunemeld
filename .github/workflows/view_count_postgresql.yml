name: View Count ETL

on:
  schedule:
    - cron: '0 3 * * *'  # Daily at 3 AM UTC
  workflow_dispatch:

jobs:
  run-view-count-etl:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Setup Chrome and ChromeDriver
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
          install-chromedriver: true

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Run View Count ETL Pipeline
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
        run: |
          cd django_backend
          python manage.py view_count_main

      - name: Verify View Count Results
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          cd django_backend
          echo "ðŸ“Š View Count ETL Results:"
          python manage.py shell -c "
          from core.models.z_view_counts import ViewCount, HistoricalViewCount
          from datetime import date

          today = date.today()
          recent_views = ViewCount.objects.filter(last_updated__date=today).count()
          recent_historical = HistoricalViewCount.objects.filter(recorded_date=today).count()
          total_views = ViewCount.objects.count()
          total_historical = HistoricalViewCount.objects.count()

          print(f'View counts updated today: {recent_views}')
          print(f'Historical records created today: {recent_historical}')
          print(f'Total view count records: {total_views}')
          print(f'Total historical records: {total_historical}')
          print()
          print('ðŸ“ˆ Breakdown by service:')
          from core.models.b_genre_service import Service
          for service in Service.objects.all():
              view_count = ViewCount.objects.filter(service=service).count()
              hist_count = HistoricalViewCount.objects.filter(service=service).count()
              if view_count > 0 or hist_count > 0:
                  print(f'{service.name}: {view_count} current, {hist_count} historical')
          "
