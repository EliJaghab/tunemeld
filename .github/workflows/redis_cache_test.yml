name: Redis Cache Test

on:
  push:
    branches: [ master, main ]
    paths:
      - 'django_backend/**'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'django_backend/**'

jobs:
  test-cache:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        cd django_backend
        pip install -r requirements.txt

    - name: Test Redis connection
      run: |
        redis-cli ping

    - name: Test Django cache with backend Redis
      run: |
        cd django_backend
        export REDIS_URL=redis://localhost:6379/0
        export RAILWAY_ENVIRONMENT=testing
        python -c "
        import os
        import django
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
        django.setup()
        from django.core.cache import cache
        from django.conf import settings
        print(f'Cache backend: {settings.CACHES[\"default\"][\"BACKEND\"]}')
        print(f'Redis URL: {settings.CACHES[\"default\"][\"LOCATION\"]}')
        cache.set('test', 'works', 60)
        result = cache.get('test')
        print('Cache test: PASS' if result == 'works' else 'Cache test: FAIL')
        assert result == 'works', 'Cache test failed'
        print('âœ… Backend Redis cache working correctly!')
        "

    - name: Test cache status endpoint
      run: |
        cd django_backend
        export REDIS_URL=redis://localhost:6379/0
        export RAILWAY_ENVIRONMENT=testing
        # Start Django server in background
        python manage.py runserver 0.0.0.0:8000 &
        SERVER_PID=$!
        sleep 3
        # Test cache status endpoint
        curl -f http://localhost:8000/cache-status/ | python -m json.tool
        # Clean up
        kill $SERVER_PID
