name: Test PostgreSQL Connection

on:
  workflow_dispatch:
    # Manual trigger only for testing

jobs:
  test-connection:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Test database connection
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          RAILWAY_ENVIRONMENT: production
        run: |
          cd django_backend
          echo "üîç Testing PostgreSQL connection..."

          python -c "
          import os
          import django
          from django.conf import settings
          from django.db import connection

          # Configure Django
          os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
          django.setup()

          print('‚úÖ Django configured successfully')
          print(f'üîß Database engine: {settings.DATABASES[\"default\"][\"ENGINE\"]}')
          print(f'üóÑÔ∏è  Database name: {settings.DATABASES[\"default\"][\"NAME\"]}')

          # Test database connection
          with connection.cursor() as cursor:
              cursor.execute('SELECT version()')
              result = cursor.fetchone()
              print(f'üêò PostgreSQL version: {result[0]}')

          print('üéâ PostgreSQL connection test PASSED!')
          "

      - name: Test Django checks
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          RAILWAY_ENVIRONMENT: production
        run: |
          cd django_backend
          echo "üîç Running Django system checks..."
          python manage.py check --deploy
          echo "‚úÖ Django system checks PASSED!"

      - name: Test migrations status
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          RAILWAY_ENVIRONMENT: production
        run: |
          cd django_backend
          echo "üîç Checking migrations status..."
          python manage.py showmigrations
          echo "‚úÖ Migrations status check PASSED!"
