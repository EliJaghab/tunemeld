name: Deployment Cache Warming

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      force_refresh:
        description: "Force refresh Redis cache (clear before warming)"
        required: false
        default: "false"
        type: boolean

jobs:
  warm-cache:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Set up environment variables
        run: |
          echo "GITHUB_ACTIONS=true" >> $GITHUB_ENV

      - name: Database Migration Safety Check
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: make ci-db-safety-check

      - name: Run Database Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_NAMESPACE_ID: ${{ secrets.CF_NAMESPACE_ID }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: make ci-db-migrate

      - name: Clear Redis Cache
        env:
          REDIS_URL: ${{ secrets.REDIS_URL }}
        run: |
          # Install redis-cli
          sudo apt-get update && sudo apt-get install -y redis-tools

          # Extract Redis connection details
          REDIS_HOST=$(echo $REDIS_URL | sed 's/redis:\/\/\([^:]*\):.*/\1/')
          REDIS_PORT=$(echo $REDIS_URL | sed 's/.*:\([0-9]*\)\/.*/\1/')
          REDIS_PASSWORD=$(echo $REDIS_URL | sed 's/redis:\/\/:\([^@]*\)@.*/\1/')

          # Clear Redis cache
          if [ -n "$REDIS_PASSWORD" ]; then
            redis-cli -h $REDIS_HOST -p $REDIS_PORT -a $REDIS_PASSWORD FLUSHDB
          else
            redis-cli -h $REDIS_HOST -p $REDIS_PORT FLUSHDB
          fi

          echo "âœ… Redis cache cleared! Next API requests will populate fresh cache."
